# Firebase Security Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user is an admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
    
    // Users collection
    match /users/{userId} {
      // Admins can read all users, users can only read their own data
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      // Only admins can create/update/delete users
      allow write: if isAdmin();
    }
    
    // API Keys collection - admin only access
    match /apiKeys/{userId} {
      allow read, write: if isAdmin();
    }
    
    // Usage Data collection
    match /usageData/{userId} {
      // Admins can read all usage data, users can only read their own
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      // Only system processes and admins can write usage data
      allow write: if isAdmin();
    }
    
    // Admin Logs - admin only access
    match /adminLogs/{logId} {
      allow read: if isAdmin();
      allow create: if isAdmin();
      allow update, delete: if false; // Immutable logs
    }
  }
}
